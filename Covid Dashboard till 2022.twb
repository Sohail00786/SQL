<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0516.1720                               -->
<workbook original-version='18.1' source-build='2022.1.2 (20221.22.0516.1720)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (table 1)' inline='true' name='federated.0q2t74j11m9gtl14mhjr51fq1sb4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table 1' name='excel-direct.0ymg1k51art8og17oxosy1sibner'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Administrator/Desktop/table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ymg1k51art8og17oxosy1sibner' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ymg1k51art8og17oxosy1sibner' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3E05AED4FCCB477F9375FB8D1590D208]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3E05AED4FCCB477F9375FB8D1590D208]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3E05AED4FCCB477F9375FB8D1590D208]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_3E05AED4FCCB477F9375FB8D1590D208]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_3E05AED4FCCB477F9375FB8D1590D208'>
            <properties context=''>
              <relation connection='excel-direct.0ymg1k51art8og17oxosy1sibner' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (table2)' inline='true' name='federated.19k1llv13zd0y712gz59j0knrlcd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table2' name='excel-direct.04qoaud185dze31eeyeka1mytewz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Administrator/Desktop/table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.04qoaud185dze31eeyeka1mytewz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.04qoaud185dze31eeyeka1mytewz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F0B14EF4D3F24E9F8613994854DE05B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F0B14EF4D3F24E9F8613994854DE05B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F0B14EF4D3F24E9F8613994854DE05B3]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F0B14EF4D3F24E9F8613994854DE05B3'>
            <properties context=''>
              <relation connection='excel-direct.04qoaud185dze31eeyeka1mytewz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (table3)' inline='true' name='federated.0wx89lt0ukwze212vwfsq0dyaqx4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table3' name='excel-direct.10mpw710kcw5rf171qobp1bgt2bf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Administrator/Desktop/table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10mpw710kcw5rf171qobp1bgt2bf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.10mpw710kcw5rf171qobp1bgt2bf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D245:no:A1:D245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_27DD938AA7D94665A1A004B766BF0988]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_27DD938AA7D94665A1A004B766BF0988]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_27DD938AA7D94665A1A004B766BF0988]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_27DD938AA7D94665A1A004B766BF0988]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_27DD938AA7D94665A1A004B766BF0988]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_27DD938AA7D94665A1A004B766BF0988'>
            <properties context=''>
              <relation connection='excel-direct.10mpw710kcw5rf171qobp1bgt2bf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (table4)' inline='true' name='federated.067d23906x2buq1059loq1eoznh9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table4' name='excel-direct.0958tb70bbehk219x73yw1x9if14'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Administrator/Desktop/table4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0958tb70bbehk219x73yw1x9if14' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0958tb70bbehk219x73yw1x9if14' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_456447A2A28C4EF4B6F2F2D4341E595C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_456447A2A28C4EF4B6F2F2D4341E595C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_456447A2A28C4EF4B6F2F2D4341E595C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_456447A2A28C4EF4B6F2F2D4341E595C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_456447A2A28C4EF4B6F2F2D4341E595C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_456447A2A28C4EF4B6F2F2D4341E595C]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;European Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;International&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Niue&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Palau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;High income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Macao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Guam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Timor&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Low income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_456447A2A28C4EF4B6F2F2D4341E595C'>
            <properties context=''>
              <relation connection='excel-direct.0958tb70bbehk219x73yw1x9if14' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table 1)' name='federated.0q2t74j11m9gtl14mhjr51fq1sb4' />
          </datasources>
          <datasource-dependencies datasource='federated.0q2t74j11m9gtl14mhjr51fq1sb4'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[:Measure Names]' value='159' />
            <format attr='height' value='36' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#bab0ac' />
            <format attr='stroke-size' scope='cols' value='4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D0375A83-05E6-46CD-84BC-8CF30158005E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table2)' name='federated.19k1llv13zd0y712gz59j0knrlcd' />
          </datasources>
          <datasource-dependencies datasource='federated.19k1llv13zd0y712gz59j0knrlcd'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.19k1llv13zd0y712gz59j0knrlcd].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Upper middle income&quot;</bucket>
              <bucket>&quot;High income&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Lower middle income&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.19k1llv13zd0y712gz59j0knrlcd].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19k1llv13zd0y712gz59j0knrlcd].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.19k1llv13zd0y712gz59j0knrlcd].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{26D20FDC-130C-446B-8D4B-3849C2F55E37}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table3)' name='federated.0wx89lt0ukwze212vwfsq0dyaqx4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wx89lt0ukwze212vwfsq0dyaqx4'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[Longitude (generated)]' field-type='quantitative' max='9094661.9940932691' min='-11296220.413574271' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[Latitude (generated)]' field-type='quantitative' max='7489636.5750785554' min='-3129773.2230031448' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[none:Location:nk]' />
              <color column='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[sum:PercentPopulationInfected:qk]' />
              <text column='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[none:Location:nk]' />
              <geometry column='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[Latitude (generated)]</rows>
        <cols>[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BA38FD93-9581-40D2-87EC-ABAF1C680749}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table4)' name='federated.067d23906x2buq1059loq1eoznh9' />
          </datasources>
          <datasource-dependencies datasource='federated.067d23906x2buq1059loq1eoznh9'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.067d23906x2buq1059loq1eoznh9].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]' />
              <text column='[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]' />
              <color column='[federated.067d23906x2buq1059loq1eoznh9].[none:Forecast Indicator:nk]' />
              <text column='[federated.067d23906x2buq1059loq1eoznh9].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.067d23906x2buq1059loq1eoznh9].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.067d23906x2buq1059loq1eoznh9].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{67750F06-1B5C-46A8-BC66-F235B507C1A4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97260' id='9' param='horz' type-v2='layout-flow' w='98606' x='697' y='1370'>
            <zone h='97260' id='7' type-v2='layout-basic' w='89626' x='697' y='1370'>
              <zone h='19692' id='3' name='Sheet 1' w='44813' x='697' y='1370'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34246' id='5' name='Sheet 2' w='44813' x='697' y='21062'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53938' id='6' name='Sheet 3' w='44813' x='45510' y='1370'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43322' id='11' name='Sheet 4' w='75851' x='697' y='55308'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43322' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]&#10;[federated.067d23906x2buq1059loq1eoznh9].[none:Forecast Indicator:nk]' type-v2='color' w='13775' x='76548' y='55308'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='103' h='97260' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='8980' x='90323' y='1370'>
              <zone h='11130' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8980' x='90323' y='1370'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97260' id='13' param='vert' type-v2='layout-flow' w='98606' x='697' y='1370'>
                <zone fixed-size='149' h='19692' id='3' is-fixed='true' name='Sheet 1' w='44813' x='697' y='1370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53938' id='6' is-fixed='true' name='Sheet 3' w='44813' x='45510' y='1370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11130' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[sum:PercentPopulationInfected:qk]' type-v2='color' w='8980' x='90323' y='1370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='34246' id='5' is-fixed='true' name='Sheet 2' w='44813' x='697' y='21062'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43322' id='11' is-fixed='true' name='Sheet 4' w='75851' x='697' y='55308'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='43322' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]&#10;[federated.067d23906x2buq1059loq1eoznh9].[none:Forecast Indicator:nk]' type-v2='color' w='13775' x='76548' y='55308'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7C0CF378-C1A8-43FB-8F49-EDC3636C940D}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q2t74j11m9gtl14mhjr51fq1sb4].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E311960-493B-42E8-B547-65FBE02B1F38}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19k1llv13zd0y712gz59j0knrlcd].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7773B8FF-1E42-4B11-9FBC-89347011B7C6}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wx89lt0ukwze212vwfsq0dyaqx4].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9EA3CCE-B065-45EE-A9DC-BD316E41A8EE}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]&#10;[federated.067d23906x2buq1059loq1eoznh9].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.067d23906x2buq1059loq1eoznh9].[none:Forecast Indicator:nk]</field>
            <field>[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]</field>
            <field>[federated.067d23906x2buq1059loq1eoznh9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87C01A45-5AAD-4A18-AD93-A2771D58854E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.067d23906x2buq1059loq1eoznh9].[none:Forecast Indicator:nk]</field>
              <field>[federated.067d23906x2buq1059loq1eoznh9].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{7503DDB9-D871-47FF-A3B2-8AC2A57B1AF9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='60' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
